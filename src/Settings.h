#include <Arduino.h>
#include <Ethernet.h>
#include <ModbusRTU.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Font.h>
#define MODBUS_ID 11
#define MODBUS_BAUDRATE 9600
#define FREQ_READ 5
#define ETHERNET_CS_PIN 5
#define NUM_METERS 4
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

uint8_t mac_ethernet[6] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};
IPAddress ip(192, 168, 0, 20);
IPAddress gateway(192, 168, 0, 1);
IPAddress subnet(255, 255, 255, 0);
IPAddress dns(8, 8, 8, 8);
EthernetClient ethClient;
ModbusRTU mb;
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
TaskHandle_t Task0;
TaskHandle_t Task1;

const char *modbus_ips[] = {
    "192.168.0.21",
    "192.168.0.22",
    "192.168.0.23",
    "192.168.0.24"};

const int modbus_ports[] = {502, 502, 502, 502};
const uint8_t meter_slave_ids[] = {1, 2, 3, 4};

uint16_t parameter_addresses[] = {
    768, 770, 772, 774, 776, 778, 780, 782, 784, 786,
    788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
    808, 810, 812, 814,
    816, 818, 820,
    856, 858, 860, 862, 864};

const char *parameter_names[] = {
    "Phase 1 current (mA)",
    "Phase 2 current (mA)",
    "Phase 3 current (mA)",
    "Neutral current (mA)",
    "Phase to phase voltage U12 (V/100)",
    "Phase to phase voltage U23 (V/100)",
    "Phase to phase voltage U31 (V/100)",
    "Phase to neutral voltage phase 1 (V/100)",
    "Phase to neutral voltage phase 2 (V/100)",
    "Phase to neutral voltage phase 3 (V/100)",
    "Frequency (Hz/100)",
    "Σ active power +/- (kW/100)",
    "Σ reactive power +/- (kvar/100)",
    "Σ apparent power (kVA/100)",
    "Σ power factor",
    "Active power phase 1 +/- (kW/100)",
    "Active power phase 2 +/- (kW/100)",
    "Active power phase 3 +/- (kW/100)",
    "Reactive power phase 1 +/- (kvar/100)",
    "Reactive power phase 2 +/- (kvar/100)",
    "Reactive power phase 3 +/- (kvar/100)",
    "Apparent power phase 1 (kVA/100)",
    "Apparent power phase 2 (kVA/100)",
    "Apparent power phase 3 (kVA/100)",
    "Power factor phase 1",
    "Power factor phase 2",
    "Power factor phase 3",
    "Active energy + (kWh)",
    "Reactive energy + (kvarh)",
    "Apparent energy (kVAh)",
    "Active energy - (kWh)",
    "Reactive energy - (kvarh)"};

const char *parameter_names_disp[] = {
    "Current A (A)",
    "Current B (A)",
    "Current C (A)",
    "Current N (A)",
    "Voltage AB (V)",
    "Voltage BC (V)",
    "Voltage CA (V)",
    "Voltage AN (V)",
    "Voltage BN (V)",
    "Voltage CN (V)",
    "Frequency (Hz)",
    "Active P (kW)",
    "Reactive P (kvar)"};

const int NUM_PARAMETERS = sizeof(parameter_addresses) / sizeof(parameter_addresses[0]);
float parameter_values[NUM_PARAMETERS] = {0};
bool readSuccess = false;
uint16_t displayParamN;

// DTSU666-H
uint16_t modbus_registers_addresses[] = {
    2110, // 0  Phase A voltage
    2112, // 1  Phase B voltage
    2114, // 2  Phase C voltage
    2118, // 3  A-B line voltage
    2120, // 4  B-C line voltage
    2122, // 5  C-A line voltage
    2102, // 6  Phase A current
    2104, // 7  Phase B current
    2106, // 8  Phase C current
    2126, // 9 Active power
    2128, // 10 Phase A active power
    2130, // 11 Phase B active power
    2132, // 12 Phase C active power
    2134, // 13 Reactive power
    2142, // 14 Apparent power
    2158, // 15 Total active electricity
    2206, // 16 Total reactive electricity
    2166, // 17 Total positive active electricity
    2214, // 18 Total positive reactive electricity
    2174, // 19 Total negative active electricity
    2222  // 20 Total negative reactive electricity
};

// // CHNT DTSU-666
// uint16_t modbus_registers_addresses[] = {
//     4126, // 0 Total positive active electricity
//     4136, // 1 Total negative active electricity
//     8192, // 2  A-B line voltage
//     8194, // 3  B-C line voltage
//     8196, // 4  C-A line voltage
//     8198, // 5  Phase A voltage
//     8200, // 6  Phase B voltage
//     8202, // 7  Phase C voltage
//     8204, // 8  Phase A current
//     8206, // 9  Phase B current
//     8208, // 10  Phase C current
//     8210, // 11 Active power
//     8212, // 12 Phase A active power
//     8214, // 13 Phase B active power
//     8216, // 17 Phase C active power
//     8218 // 19 Reactive power

// };

const int NUM_REGISTERS = sizeof(modbus_registers_addresses) / sizeof(modbus_registers_addresses[0]);

// Значения регистров с учетом масштабирования
float modbus_registers_values[NUM_REGISTERS] = {0};

// Масштабирование для каждого параметра
float scaling_factors[] = {
    1.0f,    // 0  Phase A voltage
    1.0f,    // 1  Phase B voltage
    1.0f,    // 2  Phase C voltage
    1.0f,    // 3  A-B line voltage
    1.0f,    // 4  B-C line voltage
    1.0f,    // 5  C-A line voltage
    1.0f,    // 6  Phase A current
    1.0f,    // 7  Phase B current
    1.0f,    // 8  Phase C current
    1000.0f, // 9 Active power
    1000.0f, // 10 Phase A active power
    1000.0f, // 11 Phase B active power
    1000.0f, // 12 Phase C active power
    1000.0f, // 13 Reactive power
    1000.0f, // 14 Apparent power
    1.0f,    // 15 Total active electricity
    1.0f,    // 16 Total reactive electricity
    1.0f,    // 17 Total positive active electricity
    1.0f,    // 18 Total positive reactive electricity
    1.0f,    // 19 Total negative active electricity
    1.0f     // 20 Total negative reactive electricity
};

const unsigned char proso[] = {
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00010000, B00100000, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00001000, B00010000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001110, B00000000, B00000000, B01100000, B00000000, B00001100, B00000000,
    B00000100, B00001000, B00110000, B00000011, B11111111, B11000000, B01111111, B11111000, B00000000, B01111111, B11000000, B00000111, B11111110, B00000000, B11111111, B10000000,
    B00000010, B00001100, B00010000, B00000011, B11111111, B11100000, B01111111, B11111110, B00000001, B11111111, B11110000, B00001111, B11111110, B00000001, B11111111, B11100000,
    B00000000, B00000100, B00001000, B00000011, B11111111, B11110000, B01111111, B11111111, B00000011, B11111111, B11111000, B00011111, B00011110, B00000111, B11111111, B11110000,
    B00000000, B00000000, B00001000, B00000011, B11000000, B01111000, B01111000, B00001111, B00000111, B11000000, B01111100, B00111100, B00000010, B00000111, B10000000, B11111000,
    B00000000, B00000000, B00000000, B00000011, B11000000, B00111000, B01111000, B00000111, B00000111, B10000000, B00111100, B00111100, B00000000, B00001111, B00000000, B01111000,
    B00000000, B01000000, B10000000, B00000011, B11000000, B00111000, B01111000, B00000111, B10001111, B00000000, B00011110, B00111100, B00000000, B00001110, B00000000, B00111100,
    B00010000, B00100000, B01000000, B00000011, B11000000, B00111100, B01111000, B00000111, B10001111, B00000000, B00011110, B00111100, B00000000, B00011110, B00000000, B00011100,
    B00001000, B00010000, B00100000, B00000011, B11000000, B00111100, B01111000, B00000111, B10001110, B00000000, B00001110, B00011111, B00000000, B00011110, B00000000, B00011110,
    B00000100, B00011000, B00110000, B00000011, B11000000, B00111000, B01111000, B00000111, B10011110, B00000000, B00001110, B00011111, B11110000, B00011100, B00000000, B00011110,
    B00000010, B00001000, B00011000, B00000011, B11000000, B01111000, B01111000, B00001111, B00011110, B00000000, B00001110, B00001111, B11111100, B00011100, B00000000, B00011110,
    B00000001, B00000000, B00001000, B00000011, B11000001, B11111000, B01111000, B00011111, B00011110, B00000000, B00001110, B00000001, B11111110, B00011100, B00000000, B00011110,
    B00000000, B00000000, B00000000, B00000011, B11111111, B11110000, B01111111, B11111110, B00001110, B00000000, B00001110, B00000000, B00111111, B00011100, B00000000, B00011110,
    B00000000, B00000000, B00000000, B00000011, B11111111, B11100000, B01111111, B11111100, B00001110, B00000000, B00001110, B00000000, B00001111, B00011110, B00000000, B00011100,
    B00000000, B01000000, B00000000, B00000011, B11111111, B00000000, B01111111, B11111000, B00001111, B00000000, B00011110, B00000000, B00000111, B00011110, B00000000, B00111100,
    B00000000, B00100000, B01000000, B00000011, B11000000, B00000000, B01111000, B00111100, B00000111, B10000000, B00111100, B00000000, B00000111, B00001111, B00000000, B00111100,
    B00001000, B00010000, B00100000, B00000011, B11000000, B00000000, B01111000, B00011110, B00000111, B11000000, B01111100, B00010000, B00000111, B00000111, B10000000, B11111000,
    B00000100, B00001000, B00010000, B00000011, B11000000, B00000000, B01111000, B00001110, B00000011, B11111011, B11111000, B00111110, B00011111, B00000111, B11110111, B11110000,
    B00000010, B00000100, B00001000, B00000011, B11000000, B00000000, B01111000, B00001111, B00000001, B11111111, B11110000, B00111111, B11111110, B00000011, B11111111, B11100000,
    B00000001, B00000000, B00000000, B00000011, B11000000, B00000000, B01111000, B00000111, B00000000, B01111111, B11000000, B00011111, B11111100, B00000000, B11111111, B11000000,
    B00000000, B00000000, B00000000, B00000001, B10000000, B00000000, B00110000, B00000011, B00000000, B00011111, B00000000, B00000011, B11110000, B00000000, B00111110, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B01000000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00001000, B00100000, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000100, B00010000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00001000, B00010000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00001000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000};